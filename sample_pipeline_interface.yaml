pipeline_name: PEPATAC
pipeline_type: sample
path: pipelines/pepatac.py
input_schema: pepatac_input_schema.yaml
output_schema: pepatac_output_schema.yaml
command_template: >
  python {pipeline.path}
  --output-parent { looper.results_subdir }
  --cores { compute.cores }
  --mem { compute.mem }
  --sample-name { sample.sample_name }
  --input { sample.read1 }
  {% if sample.read2 is defined %} --input2 { sample.read2 } {% endif %}
  --single-or-paired { sample.read_type }
  --genome { sample.genome }
  {% if sample.chrom_sizes is defined %} --chrom-sizes { sample.chrom_sizes } {% elif refgenie[sample.genome].fasta is defined %} --chrom-sizes { refgenie[sample.genome].fasta.chrom_sizes } {% endif %}
  {% if sample.TSS_name is defined %} --TSS-name { sample.TSS_name } {% elif refgenie[sample.genome].refgene_anno is defined %} --TSS-name { refgenie[sample.genome].refgene_anno.refgene_tss } {% endif %}
  {% if sample.blacklist is defined %} --blacklist { sample.blacklist } {% elif refgenie[sample.genome].blacklist is defined %} --blacklist { refgenie[sample.genome].blacklist.blacklist } {% endif %}
  {% if sample.anno_name is defined %} --anno-name { sample.anno_name } {% elif refgenie[sample.genome].feat_annotation is defined %} --anno-name { refgenie[sample.genome].feat_annotation.feat_annotation } {% endif %}
  {% if sample.trimmer is defined %} --trimmer { sample.trimmer } {% endif %}
  {% if sample.aligner is defined %} --aligner { sample.aligner } {% endif %}
  {% if sample.aligner == "bowtie2" %} {% if sample.genome_index is defined %} --genome-index { sample.genome_index } {% elif refgenie[sample.genome].bowtie2_index is defined %} --genome-index { refgenie[sample.genome].bowtie2_index.dir } {% endif %} {% else %} {% if sample.genome_index is defined %} --genome-index { sample.genome_index } {% elif refgenie[sample.genome].bwa_index is defined %} --genome-index { refgenie[sample.genome].bwa_index.dir } {% endif %} {% endif %}
  {% if sample.aligner == "bowtie2" %} --prealignments {% for p in sample.prealignments %} { p } { refgenie[p].bowtie2_index.dir }{% endfor %} {% else %} --prealignments {% for p in sample.prealignments %} { p } { refgenie[p].bwa_index.dir }{% endfor %} {% endif %}
  {% if sample.deduplicator is defined %} --deduplicator { sample.deduplicator } {% endif %}
  {% if sample.peak_caller is defined %} --peak-caller { sample.peak_caller } {% endif %}
  {% if sample.peak_type is defined %} --peak-type { sample.peak_type } {% endif %}
  {% if sample.extend is defined %} --extend { sample.extend } {% endif %}
  {% if sample.genome_size is defined %} --genome-size { sample.genome_size } {% endif %}
  {% if sample.frip_ref_peaks is defined %} --frip-ref-peaks { sample.frip_ref_peaks } {% endif %}
  {% if sample.motif is defined %} --motif {% endif %}
  {% if sample.sob is defined %} --sob {% endif %}
  {% if sample.sob is defined %} {% if refgenie[sample.genome].tallymer_index is defined %} --search-file { refgenie[sample.genome].tallymer_index.search_file } {% endif %} {% endif %}
  {% if sample.no_scale is defined %} --no-scale {% endif %}
  {% if sample.prioritize is defined %} --prioritize {% endif %}
  {% if sample.keep is defined %} --keep {% endif %}
  {% if sample.no_fifo is defined %} --noFIFO {% endif %}
  {% if sample.lite is defined %} --lite {% endif %}
  {% if sample.skipqc is defined %} --skipqc {% endif %}

compute:
  singularity_image: ${SIMAGES}pepatac
  conda_env: pepatac
  docker_image:  databio/pepatac
  bulker_crate:  databio/pepatac 1.0.7
  size_dependent_variables: resources-sample.tsv
bioconductor:
  readFunName: runCOCOA
  readFunPath: BiocProject/runCOCOA.R
var_templates:
  refgenie_config: "$REFGENIE"
#  custom_template: sample_template.jinja
pre_submit:
  python_functions:
  - refgenconf.looper_refgenie_populate
#  - looper.write_custom_template
