protocol_mapping:
  ATAC: pepatac
  atac: pepatac
  ATAC-SEQ: pepatac 
  ATAC-seq: pepatac
  atac-seq: pepatac

pipelines:
  pepatac:
    name: PEPATAC
    path: pipelines/pepatac.py
    schema: pepatac_input_schema.yaml
    output_schema: pepatac_output_schema.yaml
    command_template: >
      {pipeline.path}
      --sample-name {sample.sample_name}
      --genome {sample.genome}
      --input {sample.read1}
      --single-or-paired {sample.read_type}
      -O {looper.output_folder}
      -P {compute.cores}
      -M {compute.mem}
      {% if sample.read2 is defined %} --input2 {sample.read2} {% endif %}
      {% if sample.peak_caller is defined %} --peak-caller {sample.peak_caller} {% endif %}
      {% if sample.FRIP_ref is defined %} --frip-ref-peaks {sample.FRIP_ref} {% endif %}
      {% if sample.prealignments is defined %} --prealignments {sample.prealignments} {% endif %}
      {% if sample.deduplicator is defined %} --deduplicator {sample.deduplicator} {% endif %}
      {% if sample.trimmer is defined %} --trimmer {sample.trimmer} {% endif %}
      {% if sample.macs_genome_size is defined %} --genome-size {sample.macs_genome_size} {% endif %}
      {% if sample.TSS_name is defined %} --TSS-name {sample.TSS_name} {% endif %}
      {% if sample.anno_name is defined %} --anno_name {sample.anno_name} {% endif %}
      {% if sample.keep is defined %} --keep {sample.keep} {% endif %}
      {% if sample.no_fifo is defined %} --noFIFO {sample.no_fifo} {% endif %}
      {% if sample.lite is defined %} --lite {sample.lite} {% endif %}
    compute:
      singularity_image: ${SIMAGES}pepatac
      docker_image: databio/pepatac
      bulker_crate: databio/pepatac
      size_dependent_variables: resources.tsv
    bioconductor:
      readFunName: readPepatacPeakBeds
      readFunPath: BiocProject/readPepatacPeakBeds.R

collator_mappings:
  pepatac: pepatac_collator

collators:
  pepatac_collator:
    name: PEPATAC_collator1
    path: pipelines/pepatac_collator.py
    command_template: >
      {pipeline.path} -c {looper.pep_config} -o {looper.output_folder} -n {project.name}
    compute:
      singularity_image: ${SIMAGES}pepatac
      bulker_crate: databio/pepatac
      size_dependent_variables: resources.tsv

